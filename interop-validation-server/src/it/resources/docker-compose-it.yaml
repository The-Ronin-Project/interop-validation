services:
  validation-server:
    restart: on-failure
    build: ../../..
    image: interop-validation-server:local
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://springuser:ThePassword@validation-db:3306/validation-db"
      AUTH0_AUDIENCE: "https://interop-validation.dev.projectronin.io"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "http://mock-oauth2:8080/validation"
      KAFKA_CLOUD_VENDOR: "oci"
      KAFKA_CLOUD_REGION: "us-phoenix-1"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:19092"
      KAFKA_PUBLISH_SOURCE: "interop-validation-it"
      KAFKA_RETRIEVE_GROUP_ID: "interop-validation-it"
      KAFKA_RETRIEVE_SERVICE_ID: "ehr-data-authority"
      KAFKA_PROPERTIES_SECURITY_PROTOCOL: "PLAINTEXT"
      KAFKA_PROPERTIES_SASL_MECHANISM: "GSSAPI"
      KAFKA_PROPERTIES_SASL_JAAS: "nothing"
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-k", "-X", "GET", "localhost:8080/actuator/health" ]
      timeout: 5s
      retries: 30
    depends_on:
      mock-oauth2:
        condition: service_started
      validation-db:
        condition: service_healthy
      kafka:
        condition: service_started

  validation-db:
    restart: always
    image: mysql/mysql-server:latest
    environment:
      MYSQL_DATABASE: "validation-db"
      MYSQL_ROOT_PASSWORD: "secret"
      MYSQL_USER: "springuser"
      MYSQL_PASSWORD: "ThePassword"
    ports:
      - "3306:3306"
    expose:
      - 3306
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "springuser", "-pThePassword" ]
      timeout: 5s
      retries: 3

  mock-oauth2:
    image: ghcr.io/navikt/mock-oauth2-server:0.5.4
    ports:
      - "8081:8080"
    volumes:
      - ../../../build/resources/it:/host
    environment:
      - JSON_CONFIG_PATH=/host/mock-oauth2-config.json

  zookeeper:
    image: docker-proxy.devops.projectronin.io/zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  kafka:
    image: docker-proxy.devops.projectronin.io/wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://kafka:19092,
        LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://:19092,
        LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
        LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
    depends_on:
      zookeeper:
        condition: service_started

  # available at http://localhost:8090. Can view topics and messages
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092
    depends_on:
      kafka:
        condition: service_started

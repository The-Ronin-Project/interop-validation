[versions]
dbrider = "1.39.0"
idea-ext = "1.1.7"
interop-common = "3.10.0"
interop-fhir = "8.8.0"
interop-gradle = "3.2.0"
jackson = "2.15.2"
# @pin until Spring Boot 3
jakarta = "2.0.2"
ktor = "2.3.3"
ktorm = "3.6.0"
liquibase = "4.23.0"
mockk = "1.13.5"
mockwebserver = "4.11.0"
mysql = "8.0.33"
openapi-generator = "6.6.0"
# @pin until JDK 17
spring-boot = "2.7.13"
springdoc = "1.7.0"
testcontainers = "1.18.3"
uuid-creator = "5.3.2"

[libraries]
interop-common = { module = "com.projectronin.interop:interop-common", version.ref = "interop-common" }
interop-commonHttp = { module = "com.projectronin.interop:interop-common-http", version.ref = "interop-common" }
interop-commonJackson = { module = "com.projectronin.interop:interop-common-jackson", version.ref = "interop-common" }
interop-commonKtorm = { module = "com.projectronin.interop:interop-common-ktorm", version.ref = "interop-common" }
interop-commonTestDb = { module = "com.projectronin.interop:interop-common-test-db", version.ref = "interop-common" }
interop-fhir = { module = "com.projectronin.interop.fhir:interop-fhir", version.ref = "interop-fhir" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakarta" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktorm-core = { module = "org.ktorm:ktorm-core", version.ref = "ktorm" }
ktorm-support-mysql = { module = "org.ktorm:ktorm-support-mysql", version.ref = "ktorm" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql" }
rider-core = { module = "com.github.database-rider:rider-core", version.ref = "dbrider" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-parent = { module = "org.springframework.boot:spring-boot-parent", version.ref = "spring-boot" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-ui", version.ref = "springdoc" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "testcontainers" }
uuid-creator = { module = "com.github.f4b6a3:uuid-creator", version.ref = "uuid-creator" }

[bundles]
jackson = [
    "jackson-dataformat-xml",
    "jackson-dataformat-yaml",
    "jackson-datatype-jsr310",
    "jackson-module-kotlin",
]
ktor = [
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-client-core",
    "ktor-serialization-jackson",
]

[plugins]
idea-ext = { id = "org.jetbrains.gradle.plugin.idea-ext", version.ref = "idea-ext" }
interop-docker-integration = { id = "com.projectronin.interop.gradle.docker-integration", version.ref = "interop-gradle" }
interop-junit = { id = "com.projectronin.interop.gradle.junit", version.ref = "interop-gradle" }
interop-server-publish = { id = "com.projectronin.interop.gradle.server-publish", version.ref = "interop-gradle" }
interop-server-version = { id = "com.projectronin.interop.gradle.server-version", version.ref = "interop-gradle" }
interop-spring-boot = { id = "com.projectronin.interop.gradle.spring-boot", version.ref = "interop-gradle" }
interop-version-catalog = { id = "com.projectronin.interop.gradle.version-catalog-update", version.ref = "interop-gradle" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
